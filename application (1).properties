paginacao.qtd_por_pagina=25

######################
#### PORTS CONFIG ####
######################

quarkus.http.port=8080
quarkus.vertx.cluster.port=7268
#quarkus.vertx.eventbus.trust-all=true

#####################
#### CORS CONFIG ####
#####################

quarkus.http.cors=true
quarkus.http.cors.exposed-headers=Content-Disposition

# no authentication for public pages
#quarkus.http.auth.proactive=false

########################
#### SWAGGER CONFIG ####
########################

# Swagger / OpenAPI - DEVE SER DESABILITADO EM PRODUÇÃO
quarkus.smallrye-openapi.path=/swagger
quarkus.swagger-ui.always-include=true

####################
#### SSL CONFIG ####
####################

#quarkus.ssl.native=true
#quarkus.http.ssl-port=8434
#quarkus.http.ssl.protocols=TLSv1, TLSv1.1, TLSv1.2

# required => the server should always ask certificates from clients.
# request => the server should still accept requests without a certificate.
#quarkus.http.ssl.client-auth=request

# TrustStore is used to store Certified Authorities (CA) certificates verifying the
#   certificate presented by the server in an SSL connection.
#
# The Keystore on the other hand is used to store private key and identity certificates
#   presented to both parties (server or client) by a program for verification.
#
# @See{https://www.section.io/engineering-education/build-microprofile-rest-client-with-mutual-tls-authentication/}
#
%dev.truststore.file=${TRUSTSTORE_FILE:C:/desenvolvimento/certificados/cacerts/target/cacerts-basejdk11-des}
%dev.truststore.password=${TRUSTSTORE_PASSWORD:changeit}
%dev.truststore.type=JKS

####################
#### JWT CONFIG ####
####################

# JWT secret
quarkus.smallrye-jwt.enabled=false
#jwt.secret=0a6b944d-d2fb-46fc-a85e-0295c986cd9f
jwt.expiration=604800
# token tem duração de 7 dias em segundos

####################
#### SSO CONFIG ####
####################

quarkus.oidc.client-id=${SSO_CLIENT_ID:cli-ser-cbs}
quarkus.oidc.auth-server-url=${SSO_ISSUER_URL}
quarkus.oidc.credentials.secret=${SSO_SECRET}
quarkus.oidc.application-type=service
quarkus.oidc.roles.source=accesstoken
quarkus.oidc.token.auto-refresh-interval=18000
#quarkus.oidc.tls.verification=none
quarkus.http.auth.permission.authenticated.paths=/api/*
quarkus.http.auth.permission.authenticated.policy=authenticated
#quarkus.http.auth.permission.permit.paths=/health                           
#quarkus.http.auth.permission.permit.policy=permit

%dev.quarkus.oidc.auth-server-url=${SSO_ISSUER_URL:https://logindes.caixa.gov.br/auth/realms/internet}
%dev.quarkus.oidc.credentials.secret=${SSO_SECRET:b8c62890-c95d-4aff-8022-d7f2f9710b63}

###########################
#### DATASOURCE CONFIG ####
###########################

# Main Database
quarkus.datasource.username=${ORA_USER}
quarkus.datasource.password=${ORA_SENHA}
quarkus.datasource.jdbc.url=${ORA_URL}
quarkus.datasource.jdbc.driver=oracle.jdbc.driver.OracleDriver
quarkus.datasource.jdbc.max-size=40
quarkus.datasource.db-kind=other

%dev.quarkus.datasource.username=${ORA_USER:SCBSDR01}
%dev.quarkus.datasource.password=${ORA_SENHA:zUnkv5cdf3q6Dk}
%dev.quarkus.datasource.jdbc.url=${ORA_URL:jdbc:oracle:thin:@10.116.101.7:1521/orad01sc}

# Hibernate
quarkus.hibernate-orm.database.default-schema=CBS
quarkus.hibernate-orm.packages=br.gov.caixa.sicbs.domain
quarkus.hibernate-orm.dialect=org.hibernate.dialect.Oracle10gDialect

########################
#### LOGGING CONFIG ####
########################

quarkus.log.level=${LOG_LEVEL:INFO}
quarkus.hibernate-orm.log.sql=${LOG_SQL:false}
quarkus.hibernate-orm.log.bind-parameters=${LOG_SQL_BIND:false}
quarkus.log.category."br.gov.caixa.sicbs.api.config".level=${LOG_CONFIG:INFO}
quarkus.log.category."br.gov.caixa.sicbs.api.controllers".level=${LOG_CONTROLLERS:INFO}
quarkus.log.category."br.gov.caixa.sicbs.api.dao".level=${LOG_DAO:INFO}

############################
#### API MANAGER CONFIG ####
############################

# Caixa API Manager
api.manager.enable=true
api.manager.url=https://api.des.caixa:8443/
api.manager.key=l7cf7839a6152c496da545ec6d05789810
api.manager.secret=408fa3a4455f4c978c37b4056fca1fd1

#############################
#### INTERFACES EXTERNAS ####
#############################

# SIISO
siiso-api/mp-rest/url=${api.manager.url}informacoes-sociais/
siiso-api/mp-rest/scope=javax.inject.Singleton
%dev.siiso-api/mp-rest/trustStore=${truststore.file}
%dev.siiso-api/mp-rest/trustStorePassword=${truststore.password}
%dev.siiso-api/mp-rest/trustStoreFileType=JKS

# SISDE
sisde-api/mp-rest/url=${api.manager.url}seguro-desemprego-financeiro/
sisde-api/mp-rest/scope=javax.inject.Singleton
%dev.sisde-api/mp-rest/trustStore=${truststore.file}
%dev.sisde-api/mp-rest/trustStorePassword=${truststore.password}
%dev.sisde-api/mp-rest/trustStoreFileType=JKS

# SIPBS
sipbs-api/mp-rest/url=${api.manager.url}pagamento-beneficios/beneficiario/parcelas/
sipbs-api/mp-rest/scope=javax.inject.Singleton
%dev.sipbs-api/mp-rest/trustStore=${truststore.file}
%dev.sipbs-api/mp-rest/trustStorePassword=${truststore.password}
%dev.sipbs-api/mp-rest/trustStoreFileType=JKS